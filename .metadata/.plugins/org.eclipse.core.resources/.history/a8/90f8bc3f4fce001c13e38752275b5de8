package atlasweb.service;
import java.io.FileOutputStream;
import java.util.Date;
import java.util.List;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import atlasweb.model.Bracelet;
import atlasweb.model.Jeux;
import atlasweb.model.Utilisateur;


public class FirstPdf {
	public static String FILE = System.getProperty("user.home")+"/FirstPdf.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);

    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    public static void main(String[] args) {
        try {
            Document document = new Document();
            System.out.println(FILE);
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    public static void addMetaData(Document document) {
        document.addTitle("My first PDF");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Lars Vogel");
        document.addCreator("Lars Vogel");
    }

    public static void addTitlePage(Document document, Bracelet bracelet)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 1);
        preface.add(new Paragraph("Bracelet", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Un bracelet généré  par: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph(
                "This document describes something which is very important ",
                smallBold));

        addEmptyLine(preface, 8);
        List<Jeux> jeux = bracelet.getJeux();
        double prix = bracelet.getPrix();
        String type = bracelet.getTypeBracelet();
        String prenom = bracelet.getPrenom();
        Date dateNaiss = bracelet.getDateNaissance();
        int id = bracelet.getId();
        Utilisateur utilisateur = bracelet.getUtilisateur();
        preface.add(new Paragraph(
                "Client = "+utilisateur.getName()+"\n"
                +"Bracelet-Prenom = "+prenom+"\n"
                +"Bracelet-Date de naissance = "+dateNaiss+"\n"
                +"Bracelet-Type = "+type+"\n"
                +"Bracelet-Jeux = "+jeux.toString()+"\n"
                +"Bracelet-Id = "+id));

        document.add(preface);
        // Start a new page
        document.newPage();
    }



    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
